{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./chrome-extension/content/main.js","webpack:///./chrome-extension/content/parseCambridgePage.js","webpack:///./chrome-extension/content/syncStorage.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;ACjF0D;AACb;;;AAG7C,wB;AACA;AACA,sBAAsB,8EAAkB;AACxC,yBAAyB,qDAAoB;AAC7C;AACA,KAAK;AACL,0BAA0B,wDAAuB;AACjD;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;ACfM,+B;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT,YAAY;AACZ,E;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,E","file":"content.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./chrome-extension/content/main.js\");\n","\r\nimport { parseCambridgePage } from './parseCambridgePage';\r\nimport * as syncStorage from './syncStorage';\r\n\r\n\r\n(async function main() { \r\n    if (location.host.includes('dictionary.cambridge.org')) {\r\n        const toAdd = parseCambridgePage();\r\n        if (toAdd) await syncStorage.setAsync(toAdd.word, toAdd);\r\n        console.log(toAdd);\r\n    } else if (document.getElementById('wordListSaved')) {\r\n        const all = await syncStorage.getAllAsync();\r\n        const array = Object.keys(all).map(key => all[key]);\r\n        sessionStorage.setItem('wordList', JSON.stringify(array));\r\n        document.getElementById('wordListSaved').click();\r\n    }\r\n})();\r\n\r\n","\r\nexport function parseCambridgePage() { \r\n    const ele = document.querySelector('.headword');\r\n    if (!ele) return;\r\n    const word = ele.innerText;\r\n    const pron = document.querySelector('.us.dpron-i .pron').innerText;\r\n\r\n    const defs = [...document.querySelectorAll('.def-block')]\r\n        .map(block => {\r\n            const examps = [...block.querySelectorAll('.examp')];\r\n            return {\r\n                def: block.querySelector('.ddef_h').innerText.replace('[ ', '[').replace(' ]', ']').replace('\\n', ' '),\r\n                trans: block.querySelector('.trans').innerText,\r\n                examps: examps.map(examp => {\r\n                    return {\r\n                        examp: examp.querySelector('.eg').innerText,\r\n                        trans: examp.querySelector('.trans').innerText,\r\n                    };\r\n                })\r\n            };\r\n        });\r\n    return { word, pron, defs };\r\n};","export function getAllAsync() {\r\n    return new Promise(\r\n        (resolve, reject) => chrome.storage.sync.get(null, data => resolve(data))\r\n    );\r\n};\r\nexport function getAsync(key) {\r\n    return new Promise(\r\n        (resolve, reject) => chrome.storage.sync.get(key, data => resolve(data[key]))\r\n    );\r\n};\r\nexport function setAsync(key, data) {\r\n    const toStore = {};\r\n    toStore[key] = data;\r\n    return new Promise(\r\n        (resolve, reject) => chrome.storage.sync.set(toStore, () => resolve())\r\n    );\r\n};"],"sourceRoot":""}